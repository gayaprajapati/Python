#### NPS Report##

import pandas as pd
import os
import requests
import time
import numpy as np
from pprint import pprint
import json
import xlwings  as xw
import datetime as dt
import io
from datetime import timedelta
from datetime import datetime
from xlwings import constants
from PIL import ImageGrab #ImageGrab
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.image import MIMEImage
from email.mime.base import MIMEBase
from email import encoders
import mimetypes
import os.path
import openpyxl
import datetime 


def poll_job(s, redash_url, job):
    # TODO: add timeout
    while job['status'] not in (3,4):
        response = s.get('{}/api/jobs/{}'.format(redash_url, job['id']))
        job = response.json()['job']
        time.sleep(1)
 
    if job['status'] == 3:
        return job['query_result_id']
    
    return None

#For MMT Mongo DB Refresh query
def get_fresh_query_result(redash_url, query_id, api_key):
    s = requests.Session()
    s.headers.update({'Authorization': 'Key {}'.format(api_key)})
 
    response = s.post('{}/api/queries/{}/refresh'.format(redash_url, query_id))
 
    if response.status_code != 200:
        raise Exception('Refresh failed.')
 
    result_id = poll_job(s, redash_url, response.json()['job'])
 
    if result_id:
        response = s.get('{}/api/queries/{}/results/{}.json'.format(redash_url, query_id, result_id))
        if response.status_code != 200:
            raise Exception('Failed getting results.')
    else:
        raise Exception('Query execution failed.')
 
    return response.json()['query_result']['data']['rows']
 

    # Need to use a *user API key* here (and not a query API key).

api_key = 'UjWaxaQfk80oX55OYa7Tve2zvCDTGE6A5YvpoCCj'

GOMMTRaw_new = pd.DataFrame(get_fresh_query_result('http://mydesk-dash.mmt.com/', 1378, api_key),columns = ['rating','surveyIdentifier','surveyTakenDate','surveyClient','attributes.HOTEL_CODE','attributes.LOB_TYPE','attributes.BOOKING_ID','createdDateTime','attributes.MEDIUM','surveyStatus','uniqueId','attributes.SOURCE','updatedDateTime','_id','attributes.DESTINATION','channel','attributes.TRIP_END_DATE'])


# for GI NPS Data

def get_fresh_query_result(redash_url, query_id, api_key):
    s = requests.Session()
    s.headers.update({'Authorization': 'Key {}'.format(api_key)})
 
    response = s.post('{}/api/queries/{}/refresh'.format(redash_url, query_id))
 
    if response.status_code != 200:
        raise Exception('Refresh failed.')
 
    result_id = poll_job(s, redash_url, response.json()['job'])
 
    if result_id:
        response = s.get('{}/api/queries/{}/results/{}.json'.format(redash_url, query_id, result_id))
        if response.status_code != 200:
            raise Exception('Failed getting results.')
    else:
        raise Exception('Query execution failed.')
 
    return response.json()['query_result']['data']['rows']
 

    # Need to use a *user API key* here (and not a query API key).

api_key = 'UjWaxaQfk80oX55OYa7Tve2zvCDTGE6A5YvpoCCj'

GIRaw = pd.DataFrame(get_fresh_query_result('http://mydesk-dash.mmt.com/', 1391, api_key),columns = ['Brand','voyagerhotelid','ResponseDate','Promoter','Passive','Detractor','Total_Response'])


yesterday_date=datetime.date.today()-timedelta(days=1)
yesterday_date=yesterday_date.strftime("%Y-%m-%d")


#For MMT Mongo DB
def get_fresh_query_result(redash_url, query_id, api_key):
    s = requests.Session()
    s.headers.update({'Authorization': 'Key {}'.format(api_key)})
 
    response = s.post('{}/api/queries/{}/refresh'.format(redash_url, query_id))
 
    if response.status_code != 200:
        raise Exception('Refresh failed.')
 
    result_id = poll_job(s, redash_url, response.json()['job'])
 
    if result_id:
        response = s.get('{}/api/queries/{}/results/{}.json'.format(redash_url, query_id, result_id))
        if response.status_code != 200:
            raise Exception('Failed getting results.')
    else:
        raise Exception('Query execution failed.')
 
    return response.json()['query_result']['data']['rows']
 

    # Need to use a *user API key* here (and not a query API key).

api_key = 'UjWaxaQfk80oX55OYa7Tve2zvCDTGE6A5YvpoCCj'

MMTRaw = pd.DataFrame(get_fresh_query_result('http://mydesk-dash.mmt.com/', 1390, api_key),columns = ['Brand','hotel_code','ResponseDate','Promoter','Passive','Detractor','Total_Response'])

#Data Mapping

ASPFile= pd.read_excel('C:/Users/mmt7982/OneDrive - Make My Trip (I) Private Limited/Desktop/Automation/Go-MMT_NPS/ASP_Dump.xlsx', sheet_name='Sheet1')
ASPFile['voyagerhotelid'] = ASPFile['voyagerhotelid'].astype('str')
ASPFile['hotel_code'] = ASPFile['hotel_code'].astype('str')

FinalGI=pd.merge(GIRaw,ASPFile,on='voyagerhotelid',how='left')
FinalMMT=pd.merge(MMTRaw,ASPFile,on='hotel_code',how='left')
    
GINPS=FinalGI [(FinalGI["ResponseDate"] == yesterday_date)]
MMTNPS=FinalMMT [(FinalMMT["ResponseDate"] == yesterday_date)]

GIAggr = {'Promoter':'sum','Passive':'sum','Detractor':'sum','Total_Response':'sum'}
MMTAggr = {'Promoter':'sum','Passive':'sum','Detractor':'sum','Total_Response':'sum'}

OverallGI = GINPS.groupby(['ASP_Bucket','Segment','<=1000','GS','AA','Brand','ResponseDate'],as_index=False).agg(GIAggr)
OverallMMT = MMTNPS.groupby(['ASP_Bucket','Segment','<=1000','GS','AA','Brand','ResponseDate'],as_index=False).agg(MMTAggr)

wb = xw.Book(r'C:\Users\mmt7982\OneDrive - Make My Trip (I) Private Limited\Desktop\Automation\Go-MMT_NPS\Go-MMT_NPS_Tracker.xlsb')
mysheet2 = wb.sheets('Raw_Data')
m=mysheet2.range('O1').value
mysheet2.range('A'+str(int(m))).value=OverallGI.values
m=mysheet2.range('O1').value
mysheet2.range('A'+str(int(m))).value=OverallMMT.values

wb.save()

#Saving images

import pandas as pd
import os
import requests
import time
import numpy as np
from pprint import pprint
import json
import xlwings  as xw
import datetime as dt
import io
from datetime import timedelta
from datetime import datetime
from xlwings import constants
from PIL import ImageGrab #ImageGrab
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.image import MIMEImage
from email.mime.base import MIMEBase
from email import encoders
import mimetypes
import os.path
import openpyxl
path='C://Users//mmt7982//OneDrive - Make My Trip (I) Private Limited//Desktop//Automation//Go-MMT_NPS'
if not os.path.exists(path):
    os.makedirs(path)

wb = xw.Book(r'C:\Users\mmt7982\OneDrive - Make My Trip (I) Private Limited\Desktop\Automation\Go-MMT_NPS\Go-MMT_NPS_Tracker.xlsb')
mysheet1 = wb.sheets('Snapshot')

#ASP Wise RoomNights
thisrange = mysheet1.range("C1:U10")
pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
img = ImageGrab.grabclipboard()
img.save(path +'/Overall_day.png')


thisrange = mysheet1.range("C12:AC21")
pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
img = ImageGrab.grabclipboard()
img.save(path +'/GOMMT_Overall_day.png')


thisrange = mysheet1.range("C24:U33")
pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
img = ImageGrab.grabclipboard()
img.save(path +'/Overall_week.png')

thisrange = mysheet1.range("C35:AC44")
pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
img = ImageGrab.grabclipboard()
img.save(path +'/GOMMT_Overall_week.png')


thisrange = mysheet1.range("C46:U62")
pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
img = ImageGrab.grabclipboard()
img.save(path +'/Overall_month.png')


thisrange = mysheet1.range("C65:AC81")
pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
img = ImageGrab.grabclipboard()
img.save(path +'/GOMMT_Overall_month.png')

thisrange = mysheet1.range("C84:AC100")
pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
img = ImageGrab.grabclipboard()
img.save(path +'/GI_Overall_month.png')

thisrange = mysheet1.range("C103:AC119")
pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
img = ImageGrab.grabclipboard()
img.save(path +'/MMT_Overall_month.png')


# thisrange = mysheet1.range("D64:V83")
# pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
# img = ImageGrab.grabclipboard()
# img.save(path +'/Premium.png')

# thisrange = mysheet1.range("D85:V104")
# pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
# img = ImageGrab.grabclipboard()
# img.save(path +'/Altacco.png')

# Mail Configration

import pandas as pd
import pyodbc
import os
from datetime import timedelta
from dateutil.relativedelta import relativedelta
import datetime
import xlwings  as xw
from xlwings import constants
from PIL import ImageGrab #ImageGrab
import time
import smtplib
import pyodbc
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.image import MIMEImage
from email.mime.base import MIMEBase
from email import encoders
import mimetypes



def send_email_1(subject,body,to_email_list):
    to_emails= to_email_list
    to_CC=to_CC_list
    message = body
    s = smtplib.SMTP(host='smtp.outlook.office365.com', port=587)
    s.starttls()
    s.login('MMT7982@go-mmt.com','gommt@21')
    msg = MIMEMultipart() 
    msg['From']='Gaya.Prajapati@go-mmt.com'
    msg['To']=to_emails
    msg['CC']=to_CC
    msg['Subject']=subject
    msg.attach(MIMEText(message, 'HTML'))

    def images(image_name):
        fp = open(path +'\\' + image_name +'.png', 'rb')
        msgImage1 = MIMEImage(fp.read())
        fp.close()
        msgImage1.add_header('Content-ID', '<' + image_name +'>')
        msg.attach(msgImage1)
    
    images('Overall_day')
    images('GOMMT_Overall_day')
    images('Overall_week')
    images('GOMMT_Overall_week')
    images('Overall_month')
    images('GOMMT_Overall_month')
    images('GI_Overall_month')
    images('MMT_Overall_month')
#     images('Premium')
#     images('Altacco')
    s.send_message(msg)
    del msg
    s.quit()
    
print('Preparing Mail body for DOM hotels NPS')
text0 = "<div style = 'color:red'> This is an automated email </div> <br/>"
text = "Hi All,  <br/> <br/> Please find below the Go-MMT NPS views :-<br/><br/>" # '+ yesterday +'

GO_MMT1="<b> Overall day wise NPS view:<b><br/>"
Image1 = '<img src="cid:Overall_day"></img><br/><br/>'

GO_MMT2="<b> Overall Category & day wise NPS view:<b><br/>"
Image2 = '<img src="cid:GOMMT_Overall_day"></img><br/><br/>'

GO_MMT3="<b> Overall week wise NPS view:<b><br/>"
Image3 = '<img src="cid:Overall_week"></img><br/><br/>'

GO_MMT4="<b> Overall Category & week wise NPS view:<b><br/>"
Image4 = '<img src="cid:GOMMT_Overall_week"></img><br/><br/>'

GO_MMT5="<b> Overall month wise NPS view:<b><br/>"
Image5 = '<img src="cid:Overall_month"></img><br/><br/>'

GO_MMT6="<b> Overall Category & month wise GO-MMT NPS view:<b><br/>"
Image6 = '<img src="cid:GOMMT_Overall_month"></img><br/><br/>'

GO_MMT7="<b> Overall Category & month wise GI NPS view:<b><br/>"
Image7 = '<img src="cid:GI_Overall_month"></img><br/><br/>'

GO_MMT8="<b> Overall Category & month wise MMT NPS view:<b><br/>"
Image8 = '<img src="cid:MMT_Overall_month"></img><br/><br/>'
                         
Regards = "<p>Best & Regards,<br/>Gaya Prasad</p>"
    
subject='DOM Hotel Go-MMT NPS Dashboard - '  + yesterday_date
body = text0 + text + GO_MMT1 + Image1 + GO_MMT2 + Image2 + GO_MMT3 + Image3 + GO_MMT4 + Image4 + GO_MMT5 + Image5 + GO_MMT6 + Image6 + GO_MMT7 + Image7 + GO_MMT8 + Image8 + Regards
#rec_To_list = ['Gaya.Prajapati@go-mmt.com']
rec_To_list=['Abhishek Logani <Abhishek.Logani@go-mmt.com','Vijay.Vittal@go-mmt.com','Piyush.Gupta@go-mmt.com','Veena.Shahane@go-mmt.com','aashendra.singh@go-mmt.com']

to_email_list=', '.join(rec_To_list)
rec_CC_list=['DH.Category@go-mmt.com']
to_CC_list=', '.join(rec_CC_list)

send_email_1(subject,body,to_email_list)




#Alt Acco Mail

#Saving images

import pandas as pd
import os
import requests
import time
import numpy as np
from pprint import pprint
import json
import xlwings  as xw
import datetime as dt
import io
from datetime import timedelta
from datetime import datetime
from xlwings import constants
from PIL import ImageGrab #ImageGrab
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.image import MIMEImage
from email.mime.base import MIMEBase
from email import encoders
import mimetypes
import datetime 
import os.path
import openpyxl
path='C://Users//mmt7982//OneDrive - Make My Trip (I) Private Limited//Desktop//Automation//Go-MMT_NPS'
if not os.path.exists(path):
    os.makedirs(path)

wb = xw.Book(r'C:\Users\mmt7982\OneDrive - Make My Trip (I) Private Limited\Desktop\Automation\Go-MMT_NPS\Go-MMT_NPS_Tracker.xlsb')
mysheet1 = wb.sheets('Snapshot_AA')

yesterday_date=datetime.date.today()-timedelta(days=1)
yesterday_date=yesterday_date.strftime("%Y-%m-%d")

#ASP Wise RoomNights
thisrange = mysheet1.range("C1:R10")
pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
img = ImageGrab.grabclipboard()
img.save(path +'/Overall_dayAA.png')


thisrange = mysheet1.range("C12:W21")
pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
img = ImageGrab.grabclipboard()
img.save(path +'/GOMMT_Overall_dayAA.png')


thisrange = mysheet1.range("C24:R33")
pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
img = ImageGrab.grabclipboard()
img.save(path +'/Overall_weekAA.png')

thisrange = mysheet1.range("C35:W44")
pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
img = ImageGrab.grabclipboard()
img.save(path +'/GOMMT_Overall_weekAA.png')


thisrange = mysheet1.range("C46:R62")
pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
img = ImageGrab.grabclipboard()
img.save(path +'/Overall_monthAA.png')


thisrange = mysheet1.range("C65:W81")
pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
img = ImageGrab.grabclipboard()
img.save(path +'/GOMMT_Overall_monthAA.png')

thisrange = mysheet1.range("C84:W100")
pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
img = ImageGrab.grabclipboard()
img.save(path +'/GI_Overall_monthAA.png')

thisrange = mysheet1.range("C103:W119")
pic = thisrange.api.CopyPicture(constants.PictureAppearance.xlScreen,constants.CopyPictureFormat.xlBitmap)
img = ImageGrab.grabclipboard()
img.save(path +'/MMT_Overall_monthAA.png')



# Mail Configration

import pandas as pd
import pyodbc
import os
from datetime import timedelta
from dateutil.relativedelta import relativedelta
import datetime
import xlwings  as xw
from xlwings import constants
from PIL import ImageGrab #ImageGrab
import time
import smtplib
import pyodbc
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.image import MIMEImage
from email.mime.base import MIMEBase
from email import encoders
import mimetypes

save_path =r'C:\Users\mmt7982\OneDrive - Make My Trip (I) Private Limited\Desktop\Automation\Go-MMT_NPS\Go-MMT_NPS_Tracker.xlsb'
wb.save(save_path)
wb.close()

def send_email_1(subject,body,to_email_list):
    to_emails= to_email_list
    to_CC=to_CC_list
    message = body
    s = smtplib.SMTP(host='smtp.outlook.office365.com', port=587)
    s.starttls()
    s.login('MMT7982@go-mmt.com','gommt@21')
    msg = MIMEMultipart() 
    msg['From']='Gaya.Prajapati@go-mmt.com'
    msg['To']=to_emails
    msg['CC']=to_CC
    msg['Subject']=subject
    msg.attach(MIMEText(message, 'HTML'))

    def images(image_name):
        fp = open(path +'\\' + image_name +'.png', 'rb')
        msgImage1 = MIMEImage(fp.read())
        fp.close()
        msgImage1.add_header('Content-ID', '<' + image_name +'>')
        msg.attach(msgImage1)
    
    images('Overall_dayAA')
    images('GOMMT_Overall_dayAA')
    images('Overall_weekAA')
    images('GOMMT_Overall_weekAA')
    images('Overall_monthAA')
    images('GOMMT_Overall_monthAA')
    images('GI_Overall_monthAA')
    images('MMT_Overall_monthAA')

    s.send_message(msg)
    del msg
    s.quit()
    
print('Preparing Mail body for Alt Acco NPS')
text0 = "<div style = 'color:red'> This is an automated email </div> <br/>"
text = "Hi All,  <br/> <br/> Please find below the Dom Alt Acco Go-MMT NPS views :-<br/><br/>" # '+ yesterday +'

GO_MMT1="<b> Overall day wise NPS view:<b><br/>"
Image1 = '<img src="cid:Overall_dayAA"></img><br/><br/>'

GO_MMT2="<b> Overall Category & day wise NPS view:<b><br/>"
Image2 = '<img src="cid:GOMMT_Overall_dayAA"></img><br/><br/>'

GO_MMT3="<b> Overall week wise NPS view:<b><br/>"
Image3 = '<img src="cid:Overall_weekAA"></img><br/><br/>'

GO_MMT4="<b> Overall Category & week wise NPS view:<b><br/>"
Image4 = '<img src="cid:GOMMT_Overall_weekAA"></img><br/><br/>'

GO_MMT5="<b> Overall month wise NPS view:<b><br/>"
Image5 = '<img src="cid:Overall_monthAA"></img><br/><br/>'

GO_MMT6="<b> Overall Category & month wise GO-MMT NPS view:<b><br/>"
Image6 = '<img src="cid:GOMMT_Overall_monthAA"></img><br/><br/>'

GO_MMT7="<b> Overall Category & month wise GI NPS view:<b><br/>"
Image7 = '<img src="cid:GI_Overall_monthAA"></img><br/><br/>'

GO_MMT8="<b> Overall Category & month wise MMT NPS view:<b><br/>"
Image8 = '<img src="cid:MMT_Overall_monthAA"></img><br/><br/>'
                         
Regards = "<p>Best & Regards,<br/>Gaya Prasad</p>"
    
subject='DOM Alt Acco Go-MMT NPS Tracker - '  + yesterday_date
body = text0 + text + GO_MMT1 + Image1 + GO_MMT2 + Image2 + GO_MMT3 + Image3 + GO_MMT4 + Image4 + GO_MMT5 + Image5 + GO_MMT6 + Image6 + GO_MMT7 + Image7 + GO_MMT8 + Image8 + Regards
#rec_To_list = ['Gaya.Prajapati@go-mmt.com']
rec_To_list=['Vaibhav.Singh@go-mmt.com','Sriram.Janakiraman@go-mmt.com','Ravi.Prakash@go-mmt.com','Vinay.Saini@go-mmt.com','Nitin.Sethi@go-mmt.com','Piyush.Gupta@go-mmt.com','Akhil.Malik@go-mmt.com','AltAcco_ZM@go-mmt.com']

to_email_list=', '.join(rec_To_list)
rec_CC_list=['DH.Category@go-mmt.com']
to_CC_list=', '.join(rec_CC_list)

send_email_1(subject,body,to_email_list)




